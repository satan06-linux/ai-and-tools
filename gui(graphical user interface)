import tkinter as tk
import speech_recognition as sr
import pyttsx3
import webbrowser
from PIL import Image, ImageTk

class JarvisAssistant:
    def __init__(self, master):
        self.master = master
        master.title("Jarvis Assistant")
        master.geometry("500x500")
        master.configure(bg='black')

        # Initialize text-to-speech engine
        self.engine = pyttsx3.init()

        # Load an image (optional)
        try:
            self.image = Image.open(".png")  # enter the photo or image name in before png and also make sure it is saved in the same file directory
            self.image = self.image.resize((100, 100), Image.ANTIALIAS)
            self.photo = ImageTk.PhotoImage(self.image)

            self.label_image = tk.Label(master, image=self.photo, bg='black')
            self.label_image.pack(pady=10)
        except FileNotFoundError:
            print("Image file not found. Please ensure 'ironman_symbol.png' is in the same directory.")
            self.label_image = tk.Label(master, text="Image not found!", fg="white", bg='black', font=("Helvetica", 12))
            self.label_image.pack(pady=10)

        self.label = tk.Label(master, text="Welcome to Jarvis Assistant!", fg="white", bg='black', font=("Helvetica", 16))
        self.label.pack(pady=10)

        self.text_area = tk.Text(master, height=10, width=50, bg='black', fg='white')
        self.text_area.pack(pady=10)

        self.speak_button = tk.Button(master, text="Speak", command=self.listen, bg='blue', fg='white')
        self.speak_button.pack(pady=5)

        self.quit_button = tk.Button(master, text="Quit", command=master.quit, bg='red', fg='white')
        self.quit_button.pack(pady=5)

    def listen(self):
        recognizer = sr.Recognizer()
        with sr.Microphone() as source:
            self.text_area.insert(tk.END, "Listening...\n")
            self.master.update()  # Update the GUI
            audio = recognizer.listen(source)

            try:
                command = recognizer.recognize_google(audio)
                self.text_area.insert(tk.END, f"You said: {command}\n")
                self.respond(command)
            except sr.UnknownValueError:
                self.text_area.insert(tk.END, "Sorry, I did not understand that.\n")
            except sr.RequestError:
                self.text_area.insert(tk.END, "Could not request results from Google Speech Recognition service.\n")

    def respond(self, command):
        command = command.lower()
        
        if "hello" in command:
            response = "Hello! How can I assist you today?"
        elif "your name" in command:
            response = "I am Jarvis, your personal assistant."
        elif "youtube" in command:
            self.search_youtube(command)
            return
        else:
            response = "I'm not sure how to respond to that."

        self.text_area.insert(tk.END, f"Jarvis: {response}\n")
        self.engine.say(response)
        self.engine.runAndWait()

    def search_youtube(self, command):
        search_term = command.replace("youtube", "").strip()
        if search_term:
            url = f"https://www.youtube.com/results?search_query={search_term}"
            webbrowser.open(url)
            response = f"Opening YouTube for {search_term}."
        else:
            response = "Please specify what to search for on YouTube."

        self.text_area.insert(tk.END, f"Jarvis: {response}\n")
        self.engine.say(response)
        self.engine.runAndWait()

if __name__ == "__main__":
    root = tk.Tk()
    jarvis = JarvisAssistant(root)
    root.mainloop()
